[ 암호화 ]
    1. 정의 : 자료를 보호 하기위해서 사람이 이해하기 어려운 문자로 변환
    2. 목적 : 자료보호, 신뢰성 확보, 무결성 유지 등
    3. 사용처 : 계정 비밀번호 , HTTPS , 금융 거래 등
    4. 주요용어
        1) 평문 : 원래의 자료
        2) 암호문 : 암호화된 자료
        3) 암호화 : 평문 자료를 암호문으로 변환하는 과정
        4) 복호화 : 암호문 자료를 평문으로 변화하는 과정
        5) 단방향 암호화 : 평문을 암호문으로 변환하고 다시 평문으로 변환 불가능
        6) 양항뱡 암호화 : 평문을 암호문으로 변환하고 다시 평문으로 변환 가능
        7) 해시 함수 : 자료를 고정된 길이로 변환하는 함수
            * 서로 다른 자료들을 *동일한 길이*의 자료로 변환하는 함수
            * 임의의 계산식으로 변환하는 과정이므로 다시 되돌리기가 불가능하다.
            "사과"    -->       A1B2C3
            "사과"    -->       A1B2C3
            "바나나"  -->       X9Y8X7
            "파인애플" -->      Z1Z2Z3
        8) 솔트 : 암호화할때 사용되는 랜덤값 ( 동일한 계산식(알고리즘)의 서로다른 결과 )
            "사과"    -->       A1B2C3솔트 --> A1B2C6
            "사과"    -->       A1B2C3솔트 --> Q1B7C9

    5. 주요 암호 알고리즘
        1) 비밀번호 : Bcrypt       해시 함수 기반의 단방향 암호화
        2) 파일 : SHA-256          256비트 해시 함수 기반의 단방향 암호화
        3) 웹통신 : TLS(HTTPS)     데이터 송수신 암호화, HTTP(암호화안된상태) HTTPS(암호화된상태)
        4) 전자서명 : SHA-256      서명 검증

[ Bcrypt ]
    1. 정의 : 해시 함수를 이용하여 주로 비밀번호를 암호화 할때 사용된다.
    2. 특징 :
        1) 솔트(salt) : 같은 비밀번호를 랜덤(salt)값 으로 서로 다른 암호화된 문자를 만들수 있다.
        2) 반복 연산 적용 : 검증 속도 늦춤
        3) 원본 복구 불가능(단방향 암호화) : 비밀번호 검증인 평문 비교 가 아닌 암호문 비교한다.

    3. 형태
        $2a$10$69bMrChodVYxOcvM/cUo7evsho3hw6YBJT9yepHudwBlIvi7KlV0.
        1) $2a : 비트크립트 버전
        2) $10 : 연산 반복수 , 2 제곱근
        3) 69bMrChodVYxOcvM/cUo7e : salt(22글자)
        4) vsho3hw6YBJT9yepHudwBlIvi7KlV0. : 해시값(31글자)

    4. 사용법
        1) 라이브러리 설치 : implementation 'org.springframework.security:spring-security-crypto:6.4.4'
        2) 비트크립트 객체 생성
            private final BCryptPasswordEncoder 비트크립트객체 = new BCryptPasswordEncoder();
        3) 암호화
            String 암호문 = 비트크립트객체.encode( 암호화할자료 );
            : 암호화할자료를 대입하여 암호문을 반환 받는다.

        4) 검증( 복호화는 불가능 )
            boolean 비교결과 = 비트크립트객체.matches( 비교할자료의평문 , 비교할암호문 );
            : 일치하면 true 불일치하면 false 반환 한다.