[ 리덕스 ]
    1. 정의 : 전역 상태 관리 라이브러리 , 서로 다른 컴포넌트 간의 효율적인 상태(값) 공유 한다.
    2. 목적 : 상태들을 저장하는 store(저장소) 만들고 서로 다른 컴포넌트 간의 일관적인 상태 유지한다(전역변수)
    3. 활용처 : 로그인상태(비밀번호X), UI테마 , 로그인유지상태 등등
        1) 전역 상태(값) 필요할때
        2) 여러개의 컴포넌트에서 동일한 변수를 공유할때
        3) 컴포넌트 간 props 전달이 복잡해질 때
        등등
    4. 핵심 용어
        export default 값          : JS파일내 하나의 기본적인 내보내기 값(함수/객체) , *name 없다* 
            import 변수명 from '파일경로'
            예] import userReducer from './userSlice.jsx'
        export const 변수명 = 값   : JS파일내 여러개 내보내기 값(함수/객체) , *name 있다*
            import { 가져올변수명 } from '파일경로'
            예] import { login, logout } from './userSlice.jsx';

        1. Store(저장소) : 상태들을 관리하는 중앙 , 즉] 모든 상태(전역변수) 들을 저장한다. 
            - 애플리케이션 1개당 1개
            - configureStore( )

        2. Slice : 상태(전역변수=값)와 리듀서(함수=상태[값]변경)를 정의하는 곳
            - 액션 통해 상태변경을 하면 *리렌더링* 된다.   
            - createSlice( ) 

        3. Reducer(리듀서) : 상태를 변경하는 함수

        4. action(액션) : 상태를 변경하기 위한 store에 보내는 함수

    5. 실행 순서 
        1) 일반(login페이지)컴포넌트 에서 action 먼저 실행된다. 
            dispatch( login() )
        2) action이 store 에 전달된다. dispatch 
        3) store 에 등록된 리듀서를 찾아서 state 업데이트 한다.

    6. 상위 컴포넌트 에서 <Provider store={ 내가만든스토어 } > 통해 하위 컴포넌트에게 공급한다.
        1) 액션 호출 : dispatch( 상태변경함수( 인자값 ) );
            - slice 내 리듀서 함수 정의에서 action 으로 인자값들을 전달받을 수 있다.
            - 함수명 : ( state , action ) => { action.payload }
            - login : ( state , action ) => { state.userInfo = action.payload; }

        2) 현재 상태 반환 : useSelector( (state) => state.등록된상태명 )

    ======== 리덕스는 * 전역 상태 * 이며 * 영구 저장이 안된다 ===========
    방법1. 클라이언트 사이드 렌더링 : + 퍼시스턴스 
    방법2. 서버 사이드 렌더링 : + 서버(SPRING)
    방법3. next.js( react 단점 보완 = 서버사이드렌더링 , 검색엔진SEO )

[ 퍼시스트 ] persist
    1. 정의 : 리덕스의 상태는 기본적으로 새로고침하면 사라진다.
    2. 목적 : localStorage,sessionStorage 활용한 저장
    3. 설치 : npm i redux-persist
    4. 핵심 용어
        1) persistConfig : persist 설정 객체
            const 퍼시스트옵션 = { key : '식별이름' , storage }
            const 퍼시스트슬라이스 = persistReducer( 퍼시스트옵션 , 슬라이스 );
        2) persistGate : 저장소에서 상태를 불러올때 *지연*해주는 컴포넌트
             <PersistGate loading = { 최초로딩초기값 } persistor={ 퍼시스트스토어 }>
    5. 주요 import
        localStorage : import storage from 'redux-persist/lib/storage'
        sessionStorage : import storageSession from 'redux-persist/lib/storage/session'


