[ 쿠키 ]
    1. 정의 : 클라이언트(브라우저)의 임시 저장소
    2. 목적
        1) 로그인 상태 유지 * 단 부가적인 보안설정이 필요하다 *
        2) 사용자 맞춤 설정 : 테마 , 언어 등등 개인 설정 값
        3) (개인)통계 또는 분석 : 방문자 행동분석 기록
    3. 비교       저장위치         유효기간               보안      예시
        세션      서버            서버가 종료시 삭제       높음      로그인
        쿠키      클라이언트       클라이언트 직접 삭제     낮음      장바구니/자동로그인
        * 활용 *
        세션은 서버에 저장 하므로 *보안*은 높지만 (대규모)서버에서는 과부하가 증가 할수 있다.
        쿠키은 클라이언트에 저장 하므로 *보안*은 낮지만 (대규모)서버에서는 과부하를 낮을수 있다.
    4. 쿠키 보안
        1) 민감한 정보는 저장하지 않는다. ( 비밀번호 )
        2) HttpOnly 설정 필수 : 자바스크립트 접근 차단
        3) HttpSecure 설정 필수 : HTTPS 환경에서만 쿠키 송수신
        4) 만료시간 설정 필수
    5. 쿠키 사용법
        1. Cookie 내가만든쿠키 = new Cookie( "쿠키명" , value );             : 쿠키 생성한다
        2. 설정값
            cookie.setPath("경로");           : 쿠키의 접근 가능한 경로 설정
            cookie.setMaxAge(초);             : 쿠키의 유효시간(초)
            cookie.setHttpOnly( true );       : JS로 접근 불가능(보안강화)
            cookie.setSecure( true );         : HTTPS 환경에서만 사용하는 쿠키 설정,배포단계시 TRUE

        3. 쿠키 등록하여 클라이언트에게 응답(보낸다)
            HttpServletResponse response
            response.addCookie( 내가만든쿠키 );

        4. 쿠키 확인
            HttpServletRequest request
            Cookie[] cookies = request.getCookies();
            for( Cookie c : cookies ){
                if( c.getName().equals( "쿠키명") ){ String value = c.getValue() }
            }
            // vs
            @CookieValue()

        5. 쿠키 삭제
            HttpServletResponse response
             Cookie 내가만든쿠키 = new Cookie( "삭제할쿠키명" , null );
             cookie.setHttpOnly( true );
             cookie.setSecure( false );
             cookie.setPath("/");
             cookie.setMaxAge( 0 );
             response.addCookie( 내가만든쿠키 );